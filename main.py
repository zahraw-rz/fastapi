from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import re

app = FastAPI()

class Info1(BaseModel):
    data1: str

class Info2(BaseModel):
    data2: str

class Info3(BaseModel):
    data3: str

class Info4(BaseModel):
    data4: str

class Info5(BaseModel):
    data5: str

class Info6(BaseModel):
    data6: str

class Info7(BaseModel):
    data7: str

class Info8(BaseModel):
    data8: str

class Info9(BaseModel):
    data9: str

class Info10(BaseModel):
    data10: str

class Info11(BaseModel):
    data11: str

class Info12(BaseModel):
    data12: str

class Info13(BaseModel):
    data13: str

class Info14(BaseModel):
    data14: str

class Info15(BaseModel):
    data15: str

class Info16(BaseModel):
    data16: str

class Info17(BaseModel):
    data17: str

class Info18(BaseModel):
    data18: str

class Info19(BaseModel):
    data19: str

class Info20(BaseModel):
    data20: str

def is_persian_text(text):
    persian_pattern = re.compile(r'^[آ-ی]+$')
    return bool(re.match(persian_pattern, text))

def is_valid_date(date):
    date_pattern = re.compile(r'^[\d۰۱۲۳۴۵۶۷۸۹]{1,2}/[\d۰۱۲۳۴۵۶۷۸۹]{1,2}/[\d۰۱۲۳۴۵۶۷۸۹]{4}$')
    return bool(date_pattern.match(date))

def is_valid_serial(serial):
    pattern = re.compile(r'^[\d۰۱۲۳۴۵۶۷۸۹]{6}[آ-ی]\d{2}$')
    return bool(pattern.match(serial))

def is_valid_city(city):
    city_centers = ["آذربایجان شرقی","آذربایجان غربی","اردبیل","اصفهان","البرز","ایلام","بوشهر","تهران","چهارمحال و بختیاری","خراسان جنوبی","خراسان رضوی","خراسان شمالی","خوزستان","زنجان","سمنان","سیستان و بلوچستان","فارس","قزوین","قم","کردستان","کرمان","کرمانشاه","کهگیلویه وبویراحمد","گلستان","گیلان","لرستان","مازندران","مرکزی","هرمزگان","همدان","یزد"]

    pattern = re.compile(r'^(' + '|'.join(city_centers) + r')$')
    return bool(pattern.match(city))

def is_valid_province(province):
    province_centers = ["اسکو","اهر","ایلخچی","آبش احمد","آذرشهر","آقکند","باسمنج","بخشایش","بستان آباد","بناب","بناب جدید","تبریز","ترک","ترکمانچای","تسوج","تیکمه داش","جلفا","خاروانا","خامنه","خراجو","خسروشهر","خضرلو","خمارلو","خواجه","دوزدوزان","زرنق","زنوز","سراب","سردرود","سهند","سیس","سیه رود","شبستر","شربیان","شرفخانه","شندآباد","صوفیان","عجب شیر","قره آغاج","کشکسرای","کلوانق","کلیبر","کوزه کنان","گوگان","لیلان","مراغه","مرند","ملکان","ملک کیان","ممقان","مهربان","میانه","نظرکهریزی","هادی شهر","هرگلان","هریس","هشترود","هوراند","وایقان","ورزقان","یامچی","ارومیه","اشنویه","ایواوغلی","آواجیق","باروق","بازرگان","بوکان","پلدشت","پیرانشهر","تازه شهر","تکاب","چهاربرج","خوی","دیزج دیز","ربط","سردشت","سرو","سلماس","سیلوانه","سیمینه","سیه چشمه","شاهین دژ","شوط","فیرورق","قره ضیاءالدین","قطور","قوشچی","کشاورز","گردکشانه","ماکو","محمدیار","محمودآباد","مهاباد","میاندوآب","میرآباد","نالوس","نقده","نوشین","اردبیل","اصلاندوز","آبی بیگلو","بیله سوار","پارس آباد","تازه کند","تازه کندانگوت","جعفرآباد","خلخال","رضی","سرعین","عنبران","فخرآباد","کلور","کوراییم","گرمی","گیوی","لاهرود","مشگین شهر","نمین","نیر","هشتجین","هیر","ابریشم","ابوزیدآباد","اردستان","اژیه","اصفهان","افوس","انارک","ایمانشهر","آران وبیدگل","بادرود","باغ بهادران","بافران","برزک","برف انبار","بهاران شهر","بهارستان","بوئین و میاندشت","پیربکران","تودشک","تیران","جندق","جوزدان","جوشقان و کامو","چادگان","چرمهین","چمگردان","حبیب آباد","حسن آباد","حنا","خالدآباد","خمینی شهر","خوانسار","خور","خورزوق","داران","دامنه","درچه","دستگرد","دهاقان","دهق","دولت آباد","دیزیچه","رزوه","رضوانشهر","زاینده رود","زرین شهر","زواره","زیباشهر","سده لنجان","سفیدشهر","سگزی","سمیرم","شاهین شهر","شهرضا","طالخونچه","عسگران","علویجه","فرخی","فریدونشهر","فلاورجان","فولادشهر","قمصر","قهجاورستان","قهدریجان","کاشان","کرکوند","کلیشاد و سودرجان","کمشچه","کمه","کهریزسنگ","کوشک","کوهپایه","گرگاب","گزبرخوار","گلپایگان","گلدشت","گلشهر","گوگد","لای بید","مبارکه","مجلسی","محمدآباد","مشکات","منظریه","مهاباد","میمه","نائین","نجف آباد","نصرآباد","نطنز","نوش آباد","نیاسر","نیک آباد","هرند","ورزنه","ورنامخواست","وزوان","ونک","اسارا","اشتهارد","تنکمان","چهارباغ","سعید آباد","شهر جدید هشتگرد","طالقان","کرج","کمال شهر","کوهسار","گرمدره","ماهدشت","محمدشهر","مشکین دشت","نظرآباد","هشتگرد","ارکواز","ایلام","ایوان","آبدانان","آسمان آباد","بدره","پهله","توحید","چوار","دره شهر","دلگشا","دهلران","زرنه","سراب باغ","سرابله","صالح آباد","لومار","مهران","مورموری","موسیان","میمه","امام حسن","انارستان","اهرم","آب پخش","آبدان","برازجان","بردخون","بندردیر","بندردیلم","بندرریگ","بندرکنگان","بندرگناوه","بنک","بوشهر","تنگ ارم","جم","چغادک","خارک","خورموج","دالکی","دلوار","ریز","سعدآباد","سیراف","شبانکاره","شنبه","عسلویه","کاکی","کلمه","نخل تقی","وحدتیه","ارجمند","اسلامشهر","اندیشه","آبسرد","آبعلی","باغستان","باقرشهر","بومهن","پاکدشت","پردیس","پیشوا","تهران","جوادآباد","چهاردانگه","حسن آباد","دماوند","دیزین","شهر ری","رباط کریم","رودهن","شاهدشهر","شریف آباد","شمشک","شهریار","صالح آباد","صباشهر","صفادشت","فردوسیه","فشم","فیروزکوه","قدس","قرچک","کهریزک","کیلان","گلستان","لواسان","ملارد","میگون","نسیم شهر","نصیرآباد","وحیدیه","ورامین","اردل","آلونی","باباحیدر","بروجن","بلداجی","بن","جونقان","چلگرد","سامان","سفیددشت","سودجان","سورشجان","شلمزار","شهرکرد","طاقانک","فارسان","فرادنبه","فرخ شهر","کیان","گندمان","گهرو","لردگان","مال خلیفه","ناغان","نافچ","نقنه","هفشجان","ارسک","اسدیه","اسفدن","اسلامیه","آرین شهر","آیسک","بشرویه","بیرجند","حاجی آباد","خضری دشت بیاض","خوسف","زهان","سرایان","سربیشه","سه قلعه","شوسف","طبس ","فردوس","قاین","قهستان","محمدشهر","مود","نهبندان","نیمبلوک","احمدآباد صولت","انابد","باجگیران","باخرز","بار","بایگ","بجستان","بردسکن","بیدخت","تایباد","تربت جام","تربت حیدریه","جغتای","جنگل","چاپشلو","چکنه","چناران","خرو","خلیل آباد","خواف","داورزن","درگز","در رود","دولت آباد","رباط سنگ","رشتخوار","رضویه","روداب","ریوش","سبزوار","سرخس","سفیدسنگ","سلامی","سلطان آباد","سنگان","شادمهر","شاندیز","ششتمد","شهرآباد","شهرزو","صالح آباد","طرقبه","عشق آباد","فرهادگرد","فریمان","فیروزه","فیض آباد","قاسم آباد","قدمگاه","قلندرآباد","قوچان","کاخک","کاریز","کاشمر","کدکن","کلات","کندر","گلمکان","گناباد","لطف آباد","مزدآوند","مشهد","ملک آباد","نشتیفان","نصرآباد","نقاب","نوخندان","نیشابور","نیل شهر","همت آباد","یونسی","اسفراین","ایور","آشخانه","بجنورد","پیش قلعه","تیتکانلو","جاجرم","حصارگرمخان","درق","راز","سنخواست","شوقان","شیروان","صفی آباد","فاروج","قاضی","گرمه","لوجلی","اروندکنار","الوان","امیدیه","اندیمشک","اهواز","ایذه","آبادان","آغاجاری","باغ ملک","بستان","بندرامام خمینی","بندرماهشهر","بهبهان","ترکالکی","جایزان","چمران","چویبده","حر","حسینیه","حمزه","حمیدیه","خرمشهر","دارخوین","دزآب","دزفول","دهدز","رامشیر","رامهرمز","رفیع","زهره","سالند","سردشت","سوسنگرد","شادگان","شاوور","شرافت","شوش","شوشتر","شیبان","صالح شهر","صفی آباد","صیدون","قلعه تل","قلعه خواجه","گتوند","لالی","مسجدسلیمان","ملاثانی","میانرود","مینوشهر","هفتگل","هندیجان","هویزه","ویس","ابهر","ارمغان خانه","آب بر","چورزق","حلب","خرمدره","دندی","زرین آباد","زرین رود","زنجان","سجاس","سلطانیه","سهرورد","صائین قلعه","قیدار","گرماب","ماه نشان","هیدج","امیریه","ایوانکی","آرادان","بسطام","بیارجمند","دامغان","درجزین","دیباج","سرخه","سمنان","شاهرود","شهمیرزاد","کلاته خیج","گرمسار","مجن","مهدی شهر","میامی","ادیمی","اسپکه","ایرانشهر","بزمان","بمپور","بنت","بنجار","پیشین","جالق","چابهار","خاش","دوست محمد","راسک","زابل","زابلی","زاهدان","زهک","سراوان","سرباز","سوران","سیرکان","علی اکبر","فنوج","قصرقند","کنارک","گشت","گلمورتی","محمدان","محمدآباد","محمدی","میرجاوه","نصرت آباد","نگور","نوک آباد","نیک شهر","هیدوچ","اردکان","ارسنجان","استهبان","اشکنان","افزر","اقلید","امام شهر","اهل","اوز","ایج","ایزدخواست","آباده","آباده طشک","باب انار","بالاده","بنارویه","بهمن","بوانات","بیرم","بیضا","جنت شهر","جهرم","جویم","زرین دشت","حسن آباد","خان زنیان","خاوران","خرامه","خشت","خنج","خور","داراب","داریان","دبیران","دژکرد","دهرم","دوبرجی","رامجرد","رونیز","زاهدشهر","زرقان","سده","سروستان","سعادت شهر","سورمق","سیدان","ششده","شهرپیر","شهرصدرا","شیراز","صغاد","صفاشهر","علامرودشت","فدامی","فراشبند","فسا","فیروزآباد","قائمیه","قادرآباد","قطب آباد","قطرویه","قیر","کارزین (فتح آباد)","کازرون","کامفیروز","کره ای","کنارتخته","کوار","گراش","گله دار","لار","لامرد","لپویی","لطیفی","مبارک آباددیز","مرودشت","مشکان","مصیری","مهر","میمند","نوبندگان","نوجین","نودان","نورآباد","نی ریز","وراوی","ارداق","اسفرورین","اقبالیه","الوند","آبگرم","آبیک","آوج","بوئین زهرا","بیدستان","تاکستان","خاکعلی","خرمدشت","دانسفهان","رازمیان","سگزآباد","سیردان","شال","شریفیه","ضیاآباد","قزوین","کوهین","محمدیه","محمودآباد نمونه","معلم کلایه","نرجه","جعفریه","دستجرد","سلفچگان","قم","قنوات","کهک","آرمرده","بابارشانی","بانه","بلبان آباد","بوئین سفلی","بیجار","چناره","دزج","دلبران","دهگلان","دیواندره","زرینه","سروآباد","سریش آباد","سقز","سنندج","شویشه","صاحب","قروه","کامیاران","کانی دینار","کانی سور","مریوان","موچش","یاسوکند","اختیارآباد","ارزوئیه","امین شهر","انار","اندوهجرد","باغین","بافت","بردسیر","بروات","بزنجان","بم","بهرمان","پاریز","جبالبارز","جوپار","جوزم","جیرفت","چترود","خاتون آباد","خانوک","خورسند","درب بهشت","دهج","رابر","راور","راین","رفسنجان","رودبار","ریحان شهر","زرند","زنگی آباد","زیدآباد","سیرجان","شهداد","شهربابک","صفائیه","عنبرآباد","فاریاب","فهرج","قلعه گنج","کاظم آباد","کرمان","کشکوئیه","کهنوج","کوهبنان","کیانشهر","گلباف","گلزار","لاله زار","ماهان","محمدآباد","محی آباد","مردهک","مس سرچشمه","منوجان","نجف شهر","نرماشیر","نظام شهر","نگار","نودژ","هجدک","یزدان شهر","ازگله","اسلام آباد غرب","باینگان","بیستون","پاوه","تازه آباد","جوان رود","حمیل","ماهیدشت","روانسر","سرپل ذهاب","سرمست","سطر","سنقر","سومار","شاهو","صحنه","قصرشیرین","کرمانشاه","کرندغرب","کنگاور","کوزران","گهواره","گیلانغرب","میان راهان","نودشه","نوسود","هرسین","هلشی","باشت","پاتاوه","چرام","چیتاب","دهدشت","دوگنبدان","دیشموک","سوق","سی سخت","قلعه رئیسی","گراب سفلی","لنده","لیکک","مادوان","مارگون","یاسوج","انبارآلوم","اینچه برون","آزادشهر","آق قلا","بندرترکمن","بندرگز","جلین","خان ببین","دلند","رامیان","سرخنکلاته","سیمین شهر","علی آباد کتول","فاضل آباد","کردکوی","کلاله","گالیکش","گرگان","گمیش تپه","گنبدکاووس","مراوه","مینودشت","نگین شهر","نوده خاندوز","نوکنده","ازنا","اشترینان","الشتر","الیگودرز","بروجرد","پلدختر","چالانچولان","چغلوندی","چقابل","خرم آباد","درب گنبد","دورود","زاغه","سپیددشت","سراب دوره","فیروزآباد","کونانی","کوهدشت","گراب","معمولان","مومن آباد","نورآباد","ویسیان","احمدسرگوراب","اسالم","اطاقور","املش","آستارا","آستانه اشرفیه","بازار جمعه","بره سر","بندرانزلی","پره سر","تالش","توتکابن","جیرنده","چابکسر","چاف و چمخاله","چوبر","حویق","خشکبیجار","خمام","دیلمان","رانکوه","رحیم آباد","رستم آباد","رشت","رضوانشهر","رودبار","رودبنه","رودسر","سنگر","سیاهکل","شفت","شلمان","صومعه سرا","فومن","کلاچای","کوچصفهان","کومله","کیاشهر","گوراب زرمیخ","لاهیجان","لشت نشا","لنگرود","لوشان","لولمان","لوندویل","لیسار","ماسال","ماسوله","مرجقل","منجیل","واجارگاه","امیرکلا","ایزدشهر","آلاشت","آمل","بابل","بابلسر","بلده","بهشهر","بهنمیر","پل سفید","تنکابن","جویبار","چالوس","چمستان","خرم آباد","خلیل شهر","خوش رودپی","دابودشت","رامسر","رستمکلا","رویان","رینه","زرگرمحله","زیرآب","ساری","سرخرود","سلمان شهر","سورک","شیرگاه","شیرود","عباس آباد","فریدونکنار","فریم","قائم شهر","کتالم","کلارآباد","کلاردشت","کله بست","کوهی خیل","کیاسر","کیاکلا","گتاب","گزنک","گلوگاه","محمودآباد","مرزن آباد","مرزیکلا","نشتارود","نکا","نور","نوشهر","اراک","آستانه","آشتیان","پرندک","تفرش","توره","جاورسیان","خشکرود","خمین","خنداب","داودآباد","دلیجان","رازقان","زاویه","ساروق","ساوه","سنجان","شازند","غرق آباد","فرمهین","قورچی باشی","کرهرود","کمیجان","مامونیه","محلات","مهاجران","میلاجرد","نراق","نوبران","نیمور","هندودر","ابوموسی","بستک","بندرجاسک","بندرچارک","بندرخمیر","بندرعباس","بندرلنگه","بیکا","پارسیان","تخت","جناح","حاجی آباد","درگهان","دهبارز","رویدر","زیارتعلی","سردشت","سندرک","سوزا","سیریک","فارغان","فین","قشم","قلعه قاضی","کنگ","کوشکنار","کیش","گوهران","میناب","هرمز","هشتبندی","ازندریان","اسدآباد","برزول","بهار","تویسرکان","جورقان","جوکار","دمق","رزن","زنگنه","سامن","سرکان","شیرین سو","صالح آباد","فامنین","فرسفج","فیروزان","قروه درجزین","قهاوند","کبودر آهنگ","گل تپه","گیان","لالجین","مریانج","ملایر","نهاوند","همدان","ابرکوه","احمدآباد","اردکان","اشکذر","بافق","بفروئیه","بهاباد","تفت","حمیدیا","خضرآباد","دیهوک","زارچ","شاهدیه","طبس","عقدا","مروست","مهردشت","مهریز","میبد","ندوشن","نیر","هرات","یزد","پرند","فردیس","مارلیک","سادات شهر","زیباکنار","کردان","ساوجبلاغ","تهران دشت","گلبهار","قیامدشت","بینالود","پیربازار","رضوانشهر"]

    pattern = re.compile(r'^(' + '|'.join(province_centers) + r')$')
    return bool(pattern.match(province))

def is_valid_phone(phone):
    pattern = re.compile(r'^09\d{9}$')
    return bool(pattern.match(phone))

def is_valid_landline(landline):
    pattern = re.compile(r'^0\d{2,3}-\d{7,8}$')
    return bool(pattern.match(landline))

def is_valid_faculty(faculty):
    valid_faculties = [
        "فنی و مهندسی", "علوم پایه", "علوم انسانی", "دامپزشکی", "اقتصاد", "کشاورزی", "منابع طبیعی"
    ]
    pattern = re.compile(r'^(' + '|'.join(valid_faculties) + r')$')
    return bool(pattern.match(faculty))

def is_valid_field(field):
    academic_fields = [
        "مهندسی مکانیک", "مهندسی برق", "مهندسی کامپیوتر", "مهندسی عمران", "مهندسی مواد",
        "مهندسی پزشکی", "مهندسی صنایع", "مهندسی هوافضا", "مهندسی نفت", "مهندسی شیمی",
        "مهندسی معماری", "مهندسی محیط زیست", "مهندسی کشاورزی", "مهندسی فضایی"
    ]
    pattern = re.compile(r'^(' + '|'.join(academic_fields) + r')$')

    return bool(pattern.match(field))

@app.get("/data1/{data}")
async def data1(data: str):
    errors = []
    if len(data) != 11:
        errors.append("اشتباه. تعداد کاراکترهای ورودی باید 11 باشد.")
    elif int(data[0:3]) not in range(400,403):
        errors.append("اشتباه. بخش سال نادرست است.")
    elif data[3:9] != "114150":
        errors.append("اشتباه. بخش ثابت نادرست است.")
    elif int(data[9:]) not in range(0,100):
        errors.append("اشتباه. بخش اندیس نادرست است.")
    else:
        errors.append("شماره دانشجویی : {data}")

@app.get("/data1/")
async def data1(data: str):
    errors = []
    if len(data) != 11:
        errors.append(". تعداد کاراکترهای ورودی باید 11 باشد.")
    elif int(data[0:3]) not in range(400,403):
        errors.append("اشتباه. بخش سال نادرست است.")
    elif data[3:9] != "114150":
        errors.append("اشتباه. بخش ثابت نادرست است.")
    elif int(data[9:]) not in range(0,100):
        errors.append("اشتباه. بخش اندیس نادرست است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": f" {data} داده ورودی معتبر است."
        }

@app.post("/data1/")
async def data1(body: Info1):
    errors = []
    if len(body.data1) != 11:
        errors.append("اشتباه. تعداد کاراکترهای ورودی باید 11 باشد.")
    if int(body.data1[0:3]) not in range(400,403):
        errors.append("اشتباه. بخش سال نادرست است.")
    if body.data1[3:9] != "114150":
        errors.append("اشتباه. بخش ثابت نادرست است.")
    if int(body.data1[9:]) not in range(0,100):
        errors.append("اشتباه. بخش اندیس نادرست است.")

    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data2/")
async def data2(body: Info2):
    errors = []
    if is_persian_text(body.data2):
        errors.append("اشتباه. داده باید فقط شامل حروف فارسی باشد.")
    if len(body.data2) > 10:
        errors.append("اشتباه. طول داده نباید بیشتر از 10 کاراکتر باشد.")
    if body.data2.isdigit() or not body.data2.isalnum():
        errors.append("اشتباه. داده نباید شامل عدد یا نمادهای خاص باشد.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }


@app.post("/data3/")
async def data3(body: Info3):
    errors = []
    if not is_valid_date(body.data3):
        errors.append("اشتباه. تاریخ نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data4/")
async def data4(body: Info4):
    errors = []
    if not is_valid_serial(body.data4):
        errors.append("اشتباه. سریال نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data5/")
async def data5(body: Info5):
    errors = []
    if not is_valid_city(body.data5):
        errors.append("اشتباه. مرکز نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data6/")
async def data6(body: Info6):
    errors = []
    if not is_valid_province(body.data6):
        errors.append("اشتباه. استان نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data7/")
async def data7(body: Info7):
    errors = []
    if len(body.data7) > 100:
        errors.append("اشتباه. آدرس نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data8/")
async def data8(body: Info8):
    errors = []
    if len(body.data8) != 10:
        errors.append("اشتباه. کد پستی نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data9/")
async def data9(body: Info9):
    errors = []
    if not is_valid_phone(body.data9):
        errors.append("اشتباه. تلفن همراه نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data10/")
async def data10(body: Info10):
    errors = []
    if is_valid_landline(body.data10):
        errors.append("اشتباه. تلفن ثابت نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data11/")
async def data11(body: Info11):
    errors = []
    if not is_valid_faculty(body.data11):
        errors.append("اشتباه. دانشکده نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data12/")
async def data12(body: Info12):
    errors = []
    if not is_valid_field(body.data12):
        errors.append("اشتباه. رشته تحصیلی نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data13/")
async def data13(body: Info13):
    errors = []
    if not body.data13 == "مجرد" or body.data13 == "متاهل":
        errors.append("اشتباه. وضعیت تاهل نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

@app.post("/data14/")
async def data14(body: Info14):
    errors = []
    if len(body.data14) != 10:
        errors.append("اشتباه. کد ملی نامعتبر است.")
    if errors != []:
        raise HTTPException(status_code=400, detail=errors)
    else:
        return {
            "message": "داده ورودی معتبر است."
        }

